*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

/* Basis for colour palette comes from 1bit Monitor Glow Palette by Polyducks */
/* https://lospec.com/palette-list/1bit-monitor-glow */
/* you're welcome to change the colours if you want or any of the other general page style */
:root{
  --col-01:#222323;
  --col-02:#f0f6f0;
  --col-03:#5252ff;
  --col-04:#b6e878;
  --col-05:#bcbdbc;
  --col-06:rgb(111, 111, 111);
  --col-07:#b3aaef;
  --col-08:rgb(255, 56, 205);
  --col-09:rgb(249, 196, 236); 
  --border: 1px solid var(--col-02);
}

body{
  background: radial-gradient(var(--col-04),var(--col-03));
}


.video-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 50%;
  margin: 0 auto;
  padding: 10rem;
  align-self: center;
}

/* becuase I want to overlay the play icon on the video they need to be in their own wrapper */
.video-element-wrapper{
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
  /*position the overlay*/
  position: relative;
  width: 100vh;
  align-self: center;
}

#videoElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#videoPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/2;
  grid-row: 1/2;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  pointer-events: none;
}

/* this class acts as an overlay inside the video-element-wrapper*/
/* I reuse the code I learned from Exercise 2, but instead declaring the opacity equals "0" and use :hover to make the overlay show up, 
I find changing opacity in .js file makes more sense, as I can't show the full control bar when the page is first loaded in CSS. Setting opacity to 0 
may confuses users because it is not natural to have just a video and a play overlay. */
.video-controls-wrapper{
  display: flex;
  justify-content: center;
  position: absolute;
  bottom: 0;
  width: 100%;
  background: transparent;
}


/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.video-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
  background-color: var(--col-07);
}
.video-control-button:hover{
  background-color: var(--col-09);
}
.video-control-button:active{
  background-color: var(--col-03);
}
.button-icon{
  pointer-events: none;
}

#playButton{
  background-image: url('./icons/play.svg');
}

#muteButton{
  background-image: url('./icons/mute.svg');
}

#loopButton{
  background-image: url('./icons/unloop.svg');
}

.video-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 2rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-moz-progress-bar {
  background-color: var(--col-05);
}

::-webkit-progress-bar {
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-webkit-progress-value {
  background-color: var(--col-05);
}

.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}